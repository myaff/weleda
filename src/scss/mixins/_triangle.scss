/// Делает треугольник. По умолчанию размер и цвет наследуется от шрифта, направление - острием вниз.
/// 
/// @group utilities
/// 
/// @param {Length} $size [1em] - Размер (Высота - при напримвалениях снизу вверх или сверху-вниз / Ширина - при направлениях справа-налево и слева-направо) от основания до вершины треугольника.
/// @param {String} $dir [bottom] - Направление, куда смотрит вершина треугольника, по умолчанию - вниз. Может быть `top`, `bottom`, `left`, `right`.
/// @param {Length} $sides-size [$size/2] - Размер (Ширина - при напримвалениях снизу-вверх или сверху-вниз / Высота - при направлениях справа-налево и слева-направо) от вершины до вершины треугольника.
/// @param {Color} $color [currentColor] - Цвет, по умолчанию наследуется от текста.
/// 
/// @example scss - Использование
/// .element {
/// 		@include triangle;
/// }
/// .other-element {
/// 		@include triangle(2em, right);
/// }
/// .another-element {
/// 		@include triangle(2em, top, 2em, black);
/// }
/// .get-warn {
/// 		@include triangle(1em, sometext);
/// }
/// 
/// @example css - Вывод CSS
/// .element {
/// 		display: block;
/// 		border-top: 1em solid currentColor;
/// 		border-bottom: 0 solid transparent;
/// 		border-left: 0.5em solid transparent;
/// 		border-right: 0.5em solid transparent;
/// }
/// .other-element {
/// 		display: block;
/// 		border-left: 2em solid currentColor;
/// 		border-right: 0 solid transparent;
/// 		border-top: 1em solid transparent;
/// 		border-bottom: 1em solid transparent;
/// }
/// .another-element {
/// 		display: block;
/// 		border-bottom: 2em solid black;
/// 		border-top: 0 solid transparent;
/// 		border-left: 2em solid transparent;
/// 		border-right: 2em solid transparent;
/// }
/// .get-warn {
/// 		`// nothing
/// 		`// and warning in CMD
/// }

@mixin triangle($size: 1em, $dir: bottom, $sides-size: $size/2, $color: currentColor) {
	@include size(0);
	$dir-opposite: top;
	$sides: left, right;
	@if $dir == top {
		$dir-opposite: bottom;
	} @else if $dir == left {
		$dir-opposite: right;
		$sides: top, bottom;
	} @else if $dir == right {
		$dir-opposite: left;
		$sides: top, bottom;
	} @else {
		@warn "$dir must be one of 'top, bottom, left or right'";
	}
	
	display: block;
	border-#{$dir-opposite}: $size solid $color;
	border-#{$dir}: 0 solid transparent;
	@each $side in $sides {
		border-#{$side}: $sides-size/2 solid transparent;
	}
}