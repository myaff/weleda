/// Примесь позволяет определять `width` и `height` одновременно.
/// К свойствам можно добавить префиксы `min-` и `max-`
///
/// @author Hugo Giraudel, extended by Olga Grabko
/// @access public
/// @group Utilities
///
/// @param {Length} $width - `width` элемента
/// @param {Length} $height [$width] - `height` элемента
/// @param {Mixed} $prop-prefix [false] - Префикс `min` или `max`
///
/// @example scss - Использование
/// .foo {
///   @include size(10em);
/// }
///
/// .bar {
///   @include size(100%, 10em);
/// }
/// 
/// .element {
///   @include size(100%, 10em, min);
/// }
///
/// .other-element {
///   @include size(100%,, max);
/// }
///
/// .other-element-2 {
///   @include size(100%, 10em, sometext);
/// }
///
/// @example css - Вывод CSS
/// .foo {
///   width: 10em;
///   height: 10em;
/// }
///
/// .bar {
///   width: 100%;
///   height: 10em;
/// }
/// 
/// .element {
///   min-width: 10em;
///   min-height: 10em;
/// }
///
/// .other-element {
///   max-width: 100%;
///   max-height: 100%;
/// }
///
/// .other-element-2 {
///   width: 100%;
///   height: 10em;
/// }
///
@mixin size($width, $height: $width, $prop-prefix: false) {
	@if $prop-prefix == min or $prop-prefix == max {
		#{$prop-prefix}-width: $width;
		#{$prop-prefix}-height: $height;
	} @else {
		width: $width;
		height: $height;
	}
}

/// Примесь позволяет определять `min-width` и `min-height` одновременно.
///
/// @author Olga Grabko
/// @access public
/// @group Utilities
///
/// @param {Length} $width - `min-width` элемента
/// @param {Length} $height [$width] - `min-height` элемента
///
/// @example scss - Использование
/// .foo {
///   @include min-size(10em);
/// }
///
/// .bar {
///   @include min-size(100%, 10em);
/// }
///
/// @example css - Вывод CSS
/// .foo {
///   min-width: 10em;
///   min-height: 10em;
/// }
///
/// .bar {
///   min-width: 100%;
///   min-height: 10em;
/// }
@mixin min-size($width, $height: $width) {
	@include size($width, $height, min);
}

/// Примесь позволяет определять `max-width` и `max-height` одновременно.
///
/// @author Olga Grabko
/// @access public
/// @group Utilities
///
/// @param {Length} $width - `max-width` элемента
/// @param {Length} $height [$width] - `max-height` элемента
///
/// @example scss - Использование
/// .foo {
///   @include max-size(10em);
/// }
///
/// .bar {
///   @include max-size(100%, 10em);
/// }
///
/// @example css - Вывод CSS
/// .foo {
///   max-width: 10em;
///   max-height: 10em;
/// }
///
/// .bar {
///   max-width: 100%;
///   max-height: 10em;
/// }
@mixin max-size($width, $height: $width) {
	@include size($width, $height, max);
}